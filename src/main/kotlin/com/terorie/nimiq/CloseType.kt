package com.terorie.nimiq

enum class CloseType(val id: Int) {
    GET_BLOCKS_TIMEOUT(1),
    GET_CHAIN_PROOF_TIMEOUT(2),
    GET_ACCOUNTS_TREE_CHUNK_TIMEOUT(3),
    GET_HEADER_TIMEOUT(4),
    INVALID_ACCOUNTS_TREE_CHUNK(5),
    ACCOUNTS_TREE_CHUNCK_ROOT_HASH_MISMATCH(6),
    INVALID_CHAIN_PROOF_1(7),
    RECEIVED_WRONG_HEADER(8),
    DID_NOT_GET_REQUESTED_HEADER(9),
    GET_ACCOUNTS_PROOF_TIMEOUT(11),
    GET_TRANSACTIONS_PROOF_TIMEOUT(12),
    GET_TRANSACTION_RECEIPTS_TIMEOUT(13),
    INVALID_ACCOUNTS_PROOF(14),
    ACCOUNTS_PROOF_ROOT_HASH_MISMATCH(15),
    INCOMPLETE_ACCOUNTS_PROOF(16),
    INVALID_BLOCK(17),
    INVALID_CHAIN_PROOF_2(18),
    INVALID_TRANSACTION_PROOF(19),
    INVALID_BLOCK_PROOF(20),
    SENDING_PING_MESSAGE_FAILED(22),
    SENDING_OF_VERSION_MESSAGE_FAILED(23),
    SIMULTANEOUS_CONNECTION(29),
    DUPLICATE_CONNECTION(30),
    PEER_IS_BANNED(31),
    MANUAL_NETWORK_DISCONNECT(33),
    MANUAL_WEBSOCKET_DISCONNECT(34),
    MAX_PEER_COUNT_REACHED(35),
    PEER_CONNECTION_RECYCLED(36),
    PEER_CONNECTION_RECYCLED_INBOUND_EXCHANGE(37),
    INBOUND_CONNECTIONS_BLOCKED(38),
    INVALID_CONNECTION_STATE(40),
    MANUAL_PEER_DISCONNECT(90),
    RECEIVED_INVALID_BLOCK(100),
    BLOCKCHAIN_SYNC_FAILED(101),
    RECEIVED_INVALID_HEADER(102),
    RECEIVED_TRANSACTION_NOT_MATCHING_OUR_SUBSCRIPTION(103),
    ADDR_MESSAGE_TOO_LARGE(104),
    INVALID_ADDR(105),
    ADDR_NOT_GLOBALLY_REACHABLE(106),
    INVALID_SIGNAL_TTL(107),
    INVALID_SIGNATURE(108),
    RECEIVED_BLOCK_NOT_MATCHING_OUR_SUBSCRIPTION(109),
    INCOMPATIBLE_VERSION(110),
    DIFFERENT_GENESIS_BLOCK(111),
    INVALID_PEER_ADDRESS_IN_VERSION_MESSAGE(112),
    UNEXPECTED_PEER_ADDRESS_IN_VERSION_MESSAGE(113),
    INVALID_PUBLIC_KEY_IN_VERACK_MESSAGE(114),
    INVALID_SIGNATURE_IN_VERACK_MESSAGE(115),
    BANNED_IP(116),
    RATE_LIMIT_EXCEEDED(120),
    MANUAL_PEER_BAN(190),
    CLOSED_BY_REMOTE(200),
    PING_TIMEOUT(201),
    CONNECTION_FAILED(202),
    NETWORK_ERROR(203),
    VERSION_TIMEOUT(204),
    VERACK_TIMEOUT(205),
    ABORTED_SYNC(206),
    FAILED_TO_PARSE_MESSAGE_TYPE(207),
    CONNECTION_LIMIT_PER_IP(208),
    CHANNEL_CLOSING(209),
    CONNECTION_LIMIT_DUMB(210),
    MANUAL_PEER_FAIL(290);

    val isBanningType: Boolean
        get() = id in 100..199

    val isFailingType: Boolean
        get() = id >= 200

}
